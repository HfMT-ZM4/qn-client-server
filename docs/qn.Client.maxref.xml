<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="qn.Client" module="max" category="Network">
    <digest>
        qn.Client network functionality developed in Java.
    </digest>
    <description>
        The qn.Client is a network client in the Max environment.
        It is intended to communicate with qn.Server
    </description>
    <!--METADATA-->
    <metadatalist>
        <metadata name="author">
            Fredrik Mathias Josefson
        </metadata>
        <metadata name="tag">
            mxj
        </metadata>
        <metadata name="tag">
            client
        </metadata>
    </metadatalist>
    <!--INLETS-->
    <inletlist>
        <inlet id="0" type="all">
            <digest>
                "Data to send, connect/disconnect, address (String), port #, getClientName, getNames, getServers, bang (send buffered data)"
            </digest>
            <description>
                Main input to control the Client and sending data over TCP.
            </description>
        </inlet>
        <inlet id="1" type="all">
            <digest>
                (list) buffered sending, bang to flush.
            </digest>
            <description>
                Secondary input used for buffering data before sending (using bang).
            </description>
        </inlet>
        <inlet id="3" type="all">
            <digest>
                Input to send data over UDP.
            </digest>
            <description>
                If used the data will be sent over UDP, provided the client has turned on the protocol.
            </description>
        </inlet>
    </inletlist>
    <!--OUTLETS-->
    <outletlist>
        <outlet id="0" type="all">
            <digest>
                (list) Received data over TCP.
            </digest>
            <description>
                Data received over TCP from the server or other client.
            </description>
        </outlet>
        <outlet id="1" type="all">
            <digest>
                (list/int) Info (connect/disconnect/names/clientname) or Error Code (0 success).
            </digest>
            <description>
                Information with outcome of results.
            </description>
        </outlet>
        <outlet id="2" type="all">
            <digest>
                (list) Used if timestamps are sent ((int)timestamp  latency).
            </digest>
            <description>
                (list) Used if timestamps are sent ((int)timestamp  latency).
            </description>
        </outlet>
        <outlet id="3" type="all">
            <digest>
                (list) Received data over UDP.
            </digest>
            <description>
                TData received over UDP from the server or other client.
            </description>
        </outlet>
    </outletlist>
    <!--ARGUMENTS-->
    <objarglist>
        <objarg name="address" optional="1" type="string">
            <digest>
                IP address of server to connect to.
            </digest>
            <description>
                IP address of server to connect to. Default is localhost.
            </description>
        </objarg>
        <objarg name="port" optional="1" type="int">
            <digest>
                Port of server to connect to.
            </digest>
            <description>
                Port of server to connect to. Default is 4711.
            </description>
        </objarg>
    </objarglist>
    <!--MESSAGES-->
    <methodlist>
        <method name="connect">
            <arglist />
            <digest>
                Starts the connection process.
            </digest>
            <description>
                Starts the connection process.
            </description>
        </method>
        <method name="disconnect">
            <arglist />
            <digest>
                Starts the disconnection process.
            </digest>
            <description>
                Starts the disconnection process.
            </description>
        </method>
        <method name="address">
            <arglist>
                <arg name="ip" optional="0" type="string" />
            </arglist>
            <digest>
                Sets the address to connect to.
            </digest>
            <description>
                Sets the address to connect to. Can not be done if already connected.
            </description>
        </method>
        <method name="port">
            <arglist>
                <arg name="number" optional="0" type="int" />
            </arglist>
            <digest>
                Sets the port to connect to.
            </digest>
            <description>
                Sets the port to connect to. Can not be done if already connected.
            </description>
        </method>
        <method name="getClientName">
            <arglist />
            <digest>
                Gets the name of this client.
            </digest>
            <description>
                Gets the name of this client.
            </description>
        </method>
        <method name="getNames">
            <arglist />
            <digest>
                Gets all the names of other clients connected to same server.
            </digest>
            <description>
                Gets all the names of other clients connected to same server.
            </description>
        </method>
        <method name="getServers">
            <arglist />
            <digest>
                Gets all the known servers that this client knows about.
            </digest>
            <description>
                Gets all the known servers that this client knows about.
            </description>
        </method>   
        <method name="bang">
            <arglist />
            <digest>
                Sends data in buffer.
            </digest>
            <description>
                Sends data in buffer.
            </description>
        </method>
        <method name="int">
            <arglist>
                <arg name="input" optional="0" type="int" />
            </arglist>
            <digest>
                Sends int data.
            </digest>
            <description>
                Performs the same function as <m>anything</m>.
            </description>
        </method>
        <method name="float">
            <arglist>
                <arg name="input" optional="0" type="float" />
            </arglist>
            <digest>
                Sends float data.
            </digest>
            <description>
                Performs the same function as <m>anything</m>.
            </description>
        </method>
        <method name="list">
            <arglist>
                <arg name="input" optional="0" type="list" />
            </arglist>
            <digest>
                Sends lists data.
            </digest>
            <description>
                Performs the same function as <m>anything</m>.
            </description>
        </method>
        <method name="anything">
            <arglist>
                <arg name="input" optional="0" type="list" />
            </arglist>
            <digest>
                Sends data over network either as TCP (inlet 0) or UDP (inled 2)
            </digest>
            <description>
                Sends data over network.
                Special commands:
                Client_Name -1 data | If forward_disabled is set to false on server, data is sent to client with Client_Name.
                * -1 data | Sends data to all other clients connected to the same server. 
            </description>
        </method>
    </methodlist>
    <!--ATTRIBUTES-->
    <attributelist>
​
        <attribute name='verbose' get='1' set='1' type='boolean/int' size='1' >
            <digest>If true more info is output to Max window, default is false.</digest>
            <description>If true more info is output to Max window, default is false.</description>
        </attribute>
​
        <attribute name='debug' get='1' set='1' type='boolean/int' size='1' >
            <digest>If true more info is output to Max window, default is false.</digest>
            <description>If true more info is output to Max window, default is false.</description>
        </attribute>
​
        <attribute name='raw_bytes' get='1' set='1' type='boolean/int' size='1' >
            <digest>If true bytes are sent over the network, default is false.</digest>
            <description>If true bytes are sent over the network, default is false.</description>
        </attribute>
        
        <attribute name='charset' get='1' set='1' type='string' size='1' >
            <digest>Encoding used for sending and receiving data, default is UTF-8.</digest>
            <description>Encoding used for sending and receiving data, default is UTF-8.</description>
        </attribute>
        
        <attribute name='buffer_size' get='1' set='1' type='int' size='1' >
            <digest>Size of buffer used for sending and receiving, default is 65536.</digest>
            <description>Size of buffer used for sending and receiving, default is 65536.</description>
        </attribute>
        
        <attribute name='keep_alive' get='1' set='1' type='boolean/int' size='1' >
            <digest>Used to set application level keep-alive, default is true.</digest>
            <description>Used to set application level keep-alive, default is true.</description>
        </attribute>
        
        <attribute name='keep_alive_interval_seconds' get='1' set='1' type='int' size='1' >
            <digest>Interval in seconds at which keep-alives are sent, default is 30.</digest>
            <description>Rate in seconds at which keep-alives are sent, default is 30.</description>
        </attribute>
        
        <attribute name='keep_alive_delay_seconds' get='1' set='1' type='int' size='1' >
            <digest>Delay to wait until keep-alives are started, default is 0.</digest>
            <description>Delay to wait until keep-alives are started, default is 0.</description>
        </attribute>
        
        <attribute name='reconnect' get='1' set='1' type='boolean/int' size='1' >
            <digest>Set if the client keep-alive should reconnect, default is true.</digest>
            <description>Set if the client keep-alive should reconnect, default is true.</description>
        </attribute>
        <attribute name='keep_alive_disconnect' get='1' set='1' type='boolean/int' size='1' >
            <digest>Set if the client keep-alive should disconnect a failing connection, default is true.</digest>
            <description>Set if the client keep-alive should disconnect a failing connection, default is true.</description>
        </attribute>​
        <attribute name='block_timeout_millis' get='1' set='1' type='int' size='1' >
            <digest>Timeout in milliseconds to block on network, default is 15.</digest>
            <description>Timeout in milliseconds to block on network, default is 15.</description>
        </attribute>​
        <attribute name='send_timestamps' get='1' set='1' type='boolean/int' size='1' >
            <digest>Set if timestamps should be sent from client to server, default is false.</digest>
            <description>Set if timestamps should be sent from client to server, default is false.</description>
        </attribute>​
        <attribute name='high_priority' get='1' set='1' type='boolean/int' size='1' >
            <digest>Set if client should output data to Max in high_priority thread, default is false.</digest>
            <description>Set if client should output data to Max in high_priority thread, default is false.</description>
        </attribute>
        <attribute name='include_address_in_data' get='1' set='1' type='boolean/int' size='1' >
            <digest>Set and client will report address when data is output (outlet 0), default is false.</digest>
            <description>Set and client will report address when data is output (outlet 0), default is false.</description>
        </attribute>
        <attribute name='include_udp_protocol' get='1' set='1' type='boolean/int' size='1' >
            <digest>Turns on UDP protocol, default is false.</digest>
            <description>Turns on UDP protocol, default is false.</description>
        </attribute>
        <attribute name='name' get='1' set='1' type='string' size='1' >
            <digest>Sets a name of the client, default is null.</digest>
            <description>Sets a name of the client, default is null.</description>
        </attribute>
        <attribute name='forward_udp_via_server' get='1' set='1' type='boolean/int' size='1' >
            <digest>UDP messages to other clients are sent via server and not directly to other client, default is true.</digest>
            <description>UDP messages to other clients are sent via server and not directly to other client, default is true.</description>
        </attribute>
        <attribute name='exclude_self_in_others' get='1' set='1' type='boolean/int' size='1' >
            <digest>Sets if this client should be including when sending to all others using * -1 data, default is false.</digest>
            <description>Sets if this client should be including when sending to all others using * -1 data, default is false.</description>
        </attribute>
        <attribute name='network_buffer_size' get='1' set='1' type='int' size='1' >
            <digest>Network buffer size used, default is 1048576.</digest>
            <description>Network buffer size used, default is 1048576.</description>
        </attribute>
        <attribute name='multicast' get='1' set='1' type='boolean/int' size='1' >
            <digest>Turns on multicast address, default is false.</digest>
            <description>Turns on multicast address, default is false.</description>
        </attribute>
        <attribute name='logoff_timeout_seconds' get='1' set='1' type='int' size='1' >
            <digest>Time to wait for logoff acknowledgement, default is 1.</digest>
            <description>Time to wait for logoff acknowledgement, default is 1.</description>
        </attribute>        
​
    </attributelist>
    <!--EXAMPLE-->
    <!--examplelist>
        <example img="route.png" caption="Arguments assign names or numbers to the outlets, and route the input to the correct outlet" />
    </examplelist-->
    <!--SEEALSO-->
    <seealsolist>
        <seealso name="qn.Server" />
    </seealsolist>
    <!--misc name="Output">
        <entry name="anything">
            <description>
                The first item of any message received in the inlet is compared with the arguments. If it matches one of the arguments, the rest of the message is sent out the specified outlet. Otherwise, the entire message is passed out the rightmost outlet.
            </description>
        </entry>
        <entry name="bang">
            <description>
                If the first item of a message matches one of the arguments, but the message has no additional items, <m>bang</m> is sent out the specified outlet.
            </description>
        </entry>
    </misc-->
</c74object>
